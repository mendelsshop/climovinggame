name: python-rust-lib
# figure out how to cross compile 
# also need to figure out how to move compiled libraies (.so/pyd) to main directory 
# and make sure they get named correctly like keyboard-macos.so so i can import them properly in main.py with an if statement to check which platform it is running on and import the library accordingly
# https://github.com/PyO3/setuptools-rust/blob/main/.github/workflows/ci.yml
# https://github.com/PyO3/setuptools-rust/issues/61
# https://github.com/PyO3/setuptools-rust/blob/main/docs/building_wheels.md
# https://github.com/samuelcolvin/rtoml/blob/e834a1ef2a51d4777a5bd99b03b671f719d217a7/.github/workflows/ci.yml#L60-L134

# Controls when the workflow will run

on:
  release:
    types: [published, released, prereleased]
    branches:
      - main
  workflow_dispatch:
  
defaults:
  run:
    working-directory: ./rust/keyboard

jobs:
  black:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black codespell

    - name: Check with black
      run: black --preview .

    - name: Commit files  
      run: |
        git config --local user.name  ${{ github.actor }}
        git add .
        git commit --allow-empty -m "${{ github.event.commits[0].message }} - formmated with black"
        
    - name: Push changes  # push the output folder to your repo
      uses: ad-m/github-push-action@master
      with: 
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{  github.head_ref || github.ref_name }}
        force: true
  build:
    name: build py${{ matrix.python-version }} on ${{ matrix.platform || matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu
        - macos
        - windows
        python-version:
        # - '3.6'
        - '3.7'
        # - '3.8'
        - '3.9'
        # - '3.10'
        include:
        - os: ubuntu
          platform: linux
        - os: windows
          ls: dir

    runs-on: ${{ format('{0}-latest', matrix.os) }}
    steps:
    - uses: actions/checkout@v2

    - name: set up python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: set up rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: install python dependencies
      run: pip install -U setuptools 

    - name: build lib
      run: |
        pip install -U setuptools-rust
        python setup.py build
    - name: list dist files
      run: |
        ${{ matrix.ls || 'ls -lh' }} build/

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: rust/keyboard/build/lib.*/

  upload-to-release:
    if: github.event_name == 'release'
    uses: svenstaro/upload-release-action@v2
    with:
      repo_token: ${{ secrets.GITHUB_TOKEN }}
      file: dist/lib.*/keyboard.*
      tag: ${{ github.ref }}
      file_glob: true

